Inner join in SQL

	SELECT c1.name AS city, c2.name AS country
	FROM cities AS c1
	INNER JOIN countries AS c2
	ON c1.country_code = c2.code;
	
Multiple join

	SELECT *
	FROM left_table
	  INNER JOIN right_table
		ON left_table.id = right_table.id
	  INNER JOIN another_table
		ON left_table.id = another_table.id;	
		
USING

	SELECT left_table.id AS L_id
	left_table.val AS L_v
	right_table.val AS R_
	FROM left_table
	INNER JOIN right_table
	USING (id);	

CASE WHEN THEN	
	SELECT name, continent, indep_year,
	CASE WHEN indep_year < 1900 THEN 'before 1900'
	WHEN indep_year <= 1930 THEN 'between 1900 and 1930'
	ELSE 'after 1930' END
	AS indep_year_group
	FROM states
	ORDER BY indep_year_group;
	
Exercise - 	Case when and then

	SELECT name, continent, code, surface_area,
		-- 1. First case
		CASE WHEN surface_area > 2000000 THEN 'large'
			-- 2. Second case
			WHEN surface_area > 350000 THEN 'medium'
			-- 3. Else clause + end
			ELSE 'small' END
			-- 4. Alias name
			AS geosize_group
	-- 5. From table
	FROM countries;	

INTO
	The table you created with the added geosize_group field has been loaded for you here with the name countries_plus. Observe the use of (and the placement of) the INTO command to create this countries_plus table:

	SELECT name, continent, code, surface_area,
		CASE WHEN surface_area > 2000000
				THEN 'large'
		   WHEN surface_area > 350000
				THEN 'medium'
		   ELSE 'small' END
		   AS geosize_group
	INTO countries_plus
	FROM countries;


	
SELECT country_code, size,
  CASE WHEN size > 50000000
            THEN 'large'
       WHEN size > 1000000
            THEN 'medium'
       ELSE 'small' END
       AS popsize_group
INTO pop_plus       
FROM populations
WHERE year = 2015;

-- 5. Select fields
SELECT c.name,c.continent, c.geosize_group, p.popsize_group
-- 1. From countries_plus (alias as c)
FROM countries_plus AS c
  -- 2. Join to pop_plus (alias as p)
  INNER JOIN pop_plus as p
    -- 3. Match on country code
    ON c.code = p.country_code
-- 4. Order the table    
ORDER BY geosize_group ASC;	
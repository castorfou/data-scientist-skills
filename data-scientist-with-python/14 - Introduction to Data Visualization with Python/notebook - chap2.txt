meshes linspace
	# Import numpy and matplotlib.pyplot
	import numpy as np
	import matplotlib.pyplot as plt

	# Generate two 1-D arrays: u, v
	u = np.linspace(-2, 2, 41)
	v = np.linspace(-1,1,21)

	# Generate 2-D arrays from u and v: X, Y
	X,Y = np.meshgrid(u,v)

	# Compute Z based on X and Y
	Z = np.sin(3*np.sqrt(X**2 + Y**2)) 

	# Display the resulting image with pcolor()
	plt.pcolor(Z)
	plt.show()

	# Save the figure to 'sine_mesh.png'
	plt.savefig('sine_mesh.png')

pcolor

	plt.pcolor(Z, cmap='gray')
	plt.colorbar()
	plt.show()
	
axis tight or pcolor(X,Y,Z)

contour, contourf 

	plt.contour(Z,30)
	#contourf c'est pour filled
	plt.contourf(X,Y,Z,30)
	
pleins d'exemples dans https://matplotlib.org/gallery.html

hist
	counts, bins, patches = plt.hist(x, bins=25)
	plt.show()

hist2D
	plt.hist2d(x, y, bins=(10,20))
	plt.colorbar()
	
	# Generate a 2-D histogram
	plt.hist2d(hp,mpg,bins=(20,20),range=((40,235),(8,48)))

	# Add a color bar to the histogram
	plt.colorbar()

	# Add labels, title, and display the plot
	plt.xlabel('Horse power [hp]')
	plt.ylabel('Miles per gallon [mpg]')
	plt.title('hist2d() plot')
	plt.show()


hexbin
	plt.hexbin(x,y,gridsize=(15,10))
	plt.colorbar()
	
	# Generate a 2d histogram with hexagonal bins
	plt.hexbin(hp,mpg,gridsize=(15,12),extent=(40,235,8,48))

			   
	# Add a color bar to the histogram
	plt.colorbar()

	# Add labels, title, and display the plot
	plt.xlabel('Horse power [hp]')
	plt.ylabel('Miles per gallon [mpg]')
	plt.title('hexbin() plot')
	plt.show()

imshow imread
	img = plt.imread('sunflower.jpg')
	plt.imshow(img)
	plt.axis('off')
	plt.show()
	
reduction to gray-scale
	#moyenne des pixels
	collapsed = img.mean(axis=2)
	plt.set_cmap('gray')
	plt.imshow(collapsed, cmap='gray')
	plt.axis('off')
	plt.show()
	
subsampling
	#on prend 1 pixel sur 4 en X, 1 sur 2 en y
	uneven = collapsed[::4,::2]
	#aspect pour contrer l'effet de perte sur X
	plt.imshow(uneven, aspect=2.0)
	#ou extent avec la taille initiale left to right then bottom to top
	plt.imshow(uneven, cmap='gray', extent=(0,640,0,480))
	plt.axis('off')
	plt.show()

Rescaling pixel intensities	
	# Load the image into an array: image
	image = plt.imread('640px-Unequalized_Hawkes_Bay_NZ.jpg')

	# Extract minimum and maximum values from the image: pmin, pmax
	pmin, pmax = image.min(), image.max()
	print("The smallest & largest pixel intensities are %d & %d." % (pmin, pmax))

	# Rescale the pixels: rescaled_image
	rescaled_image = 256*(image - pmin) / (pmax - pmin)
	print("The rescaled smallest & largest pixel intensities are %.1f & %.1f." % 
		  (rescaled_image.min(), rescaled_image.max()))

	# Display the original image in the top subplot
	plt.subplot(2,1,1)
	plt.title('original image')
	plt.axis('off')
	plt.imshow(image)

	# Display the rescaled image in the bottom subplot
	plt.subplot(2,1,2)
	plt.title('rescaled image')
	plt.axis('off')
	plt.imshow(rescaled_image)

	plt.show()

layout
		from bokeh.layouts import row
		layout = row(p1, p2, p3)
		output_file('row.html')
		show(layout)
		
		# Import column from the bokeh.layouts module
		from bokeh.layouts import column
		
nesting layout
		from bokeh.layouts import row, column
		
		# Import column and row from bokeh.layouts
		from bokeh.layouts import row, column

		# Make a column layout that will be used as the second row: row2
		row2 = column([mpg_hp, mpg_weight], sizing_mode='scale_width')

		# Make a row layout that includes the above column layout: layout
		layout = row([avg_mpg, row2], sizing_mode='scale_width')

		# Specify the name of the output_file and show the result
		output_file('layout_custom.html')
		show(layout)		
		
gridplot
		from bokeh.layouts import gridplot
		layout = gridplot([[None, p1], [p2, p3]], toolbar_location=None)
		
tabs
		from bokeh.models.widgets import Tabs, Panel
		# Create a Panel with a title for each tab
		first = Panel(child=row(p1, p2), title='first')
		second = Panel(child=row(p3), title='second')
		# Put the Panels in a Tabs object
		tabs = Tabs(tabs=[first, second])
		output_file('tabbed.html')
		show(layout)
		
linking axes (using same x or y scale)
		p3.x_range = p2.x_range = p1.x_range

linking selections (when using same source)
		p1 = figure(title='petal length vs. sepal length')
		p1.circle('petal_length', 'sepal_length',color='blue', source=source)
		p2 = figure(title='petal length vs. sepal width')
		p2.circle('petal_length', 'sepal_width',color='green', source=source)
		p3 = figure(title='petal length vs. petal width')
		p3.circle('petal_length', 'petal_width',line_color='red', fill_color=None,source=source)	
		
exercise - Linked brushing
		# Create ColumnDataSource: source
		source = ColumnDataSource(data=data)
		# Create the first figure: p1
		p1 = figure(x_axis_label='fertility (children per woman)', y_axis_label='female literacy (% population)',
					tools='box_select,lasso_select')
		# Add a circle glyph to p1
		p1.circle('fertility', 'female literacy', source=source)
		# Create the second figure: p2
		p2 = figure(x_axis_label='fertility (children per woman)', y_axis_label='population (millions)',
					tools='box_select,lasso_select')
		# Add a circle glyph to p2
		p2.circle('fertility', 'population', source=source)
		# Create row layout of figures p1 and p2: layout
		layout = row(p1, p2)
		# Specify the name of the output_file and show the result
		output_file('linked_brush.html')
		show(layout)

legends
		plot.circle('petal_length', 'sepal_length',size=10, source=source,color={'field': 'species','transform': mapper},legend='species')
		plot.legend.location = 'top_left'
		
hiver tooltips
		from bokeh.models import HoverTool
		hover = HoverTool(tooltips=[('species name', '@species'),('petal length', '@petal_length'),('sepal length', '@sepal_length'),])
		plot = figure(tools=[hover, 'pan','wheel_zoom'])
		
exercise - Adding a hover tooltip		
		# Import HoverTool from bokeh.models
		from bokeh.models import HoverTool

		# Create a HoverTool object: hover
		hover = HoverTool(tooltips=[('Country','@Country')])

		# Add the HoverTool object to figure p
		p.add_tools(hover)

		# Specify the name of the output_file and show the result
		output_file('hover.html')
		show(p)

ri est un dataframe

box plot

	pour valider les donnees
	weather[['AWND', 'WSF2']].plot(kind='box)
	plt.show()
	
describe

	# Describe the temperature columns
	print(weather[['TMIN','TAVG','TMAX']].describe())

hist - histogramme pour voir la tete des distributions

	# Create a histogram with 20 bins to visualize 'TDIFF'
	weather['TDIFF'].plot(kind='hist',bins=20)
	
dataframe slice sur les colonnes

	temp = weather.loc[:, 'TAVG':'TMAX']
	
faire la somme en ligne

	temp.sum(axis='columns')
	On agrege les colonnes (somme des colonnes A B C ... )
	
category
	cats = ['short', 'medium', 'long']
	ri['stop_length'] = ri.stop_length.astype('category', ordered=True,
                                          categories=cats)
	memory usage: 	ri.stop_length.memory_usage(deep=True)
	8689481			
	ri.stop_length.head()
	
reset_index
	pour repasser l'index en colonne (utile pour un merge)
	apple.reset_index(inplace=True)
	
merge dataframe

	apple_high = pd.merge(left=apple, right=high, left_on='date', right_on='DATE', how='left')
	
set index
	apres le merge on peut remettre l'index en place
	apple_high.set_index('date_and_time', inplace=True)
	
transformer une Serie Multi-Index en dataframe

	search_rate.unstack()
	type(search_rate.unstack())
	pandas.core.frame.DataFrame

Acceder a des donnees multi index
	# Print the arrest rate for moving violations in bad weather
	print(arrest_rate.loc['Moving violation','bad'])

	# Print the arrest rates for speeding violations in all three weather conditions
	print(arrest_rate.loc['Speeding'])

	
creer une serie Multi-Index 

	ri.pivot_table(index='violation',columns='driver_gender',values='search_conducted')
	# Calculate the arrest rate for each 'violation' and 'rating'
	print(ri_weather.pivot_table(index='violation', columns='rating', values='is_arrested',aggfunc='mean'))
	print(ri_weather.groupby(['violation','rating']).is_arrested.mean())


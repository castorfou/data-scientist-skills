axes
	axes([x_lo,y_lo,width, height])
	units between 0 and 1

subplot
	en vertical ou horizontal avec le subplot actif
	subplot(nrows, ncols, nsubplot)
	
Multiple plots on single axis	
	# Import matplotlib.pyplot
	import matplotlib.pyplot as plt

	# Plot in blue the % of degrees awarded to women in the Physical Sciences
	plt.plot(year, physical_sciences, color='blue')
	# Plot in red the % of degrees awarded to women in Computer Science
	plt.plot(year, computer_science, color='red')

	# Display the plot
	plt.show()

Using subplot
	# Create a figure with 1x2 subplot and make the left subplot active
	plt.subplot(1,2,1)
	# Plot in blue the % of degrees awarded to women in the Physical Sciences
	plt.plot(year, physical_sciences, color='blue')
	plt.title('Physical Sciences')

	# Make the right subplot active in the current 1x2 subplot grid
	plt.subplot(1,2,2)
	# Plot in red the % of degrees awarded to women in Computer Science
	plt.plot(year, computer_science, color='red')
	plt.title('Computer Science')

	# Use plt.tight_layout() to improve the spacing between subplots
	plt.tight_layout()
	plt.show()

subplot en 4 graphs

	# Create a figure with 2x2 subplot layout and make the top left subplot active
	plt.subplot(2,2,1)

	# Plot in blue the % of degrees awarded to women in the Physical Sciences
	plt.plot(year, physical_sciences, color='blue')
	plt.title('Physical Sciences')

	# Make the top right subplot active in the current 2x2 subplot grid 
	plt.subplot(2,2,2)

	# Plot in red the % of degrees awarded to women in Computer Science
	plt.plot(year, computer_science, color='red')
	plt.title('Computer Science')

	# Make the bottom left subplot active in the current 2x2 subplot grid
	plt.subplot(2,2,3)

	# Plot in green the % of degrees awarded to women in Health Professions
	plt.plot(year, health, color='green')
	plt.title('Health Professions')

	# Make the bottom right subplot active in the current 2x2 subplot grid
	plt.subplot(2,2,4)

	# Plot in yellow the % of degrees awarded to women in Education
	plt.plot(year, education, color='yellow')
	plt.title('Education')

	# Improve the spacing between subplots and display them
	plt.tight_layout()
	plt.show()

xlim ylim
	pour restreindre sur une zone
	plt.xlim((1947,1957))
	plt.ylim((0,1000))


	# Plot the % of degrees awarded to women in Computer Science and the Physical Sciences
	plt.plot(year,computer_science, color='red') 
	plt.plot(year, physical_sciences, color='blue')

	# Add the axis labels
	plt.xlabel('Year')
	plt.ylabel('Degrees awarded to women (%)')

	# Set the x-axis range
	plt.xlim((1990,2000))

	# Set the y-axis range
	plt.ylim((0,50))

	# Add a title and display the plot
	plt.title('Degrees awarded to women (1990-2010)\nComputer Science (red)\nPhysical Sciences (blue)')
	plt.show()

	# Save the image as 'xlim_and_ylim.png'
	plt.savefig('xlim_and_ylim.png')

	
axis
	plt.axis((1947,1957,0,600))
	
	# Plot in blue the % of degrees awarded to women in Computer Science
	plt.plot(year,computer_science, color='blue')

	# Plot in red the % of degrees awarded to women in the Physical Sciences
	plt.plot(year, physical_sciences,color='red')

	# Set the x-axis and y-axis limits
	plt.axis((1990,2010,0,50))

	# Show the figure
	plt.show()

	# Save the figure as 'axis_limits.png'
	plt.savefig('axis_limits.png')
	
annotate()
	pour mettre du texte et une fleche sur un graph
	plt.annotate('setosa', xy=(5.0,3.5))
	plt.annotate('setosa', xy=(5.0, 3.5), xytext=(4.25, 4.0), arrowpros={'color':'red'})

		# Plot with legend as before
		plt.plot(year, computer_science, color='red', label='Computer Science') 
		plt.plot(year, physical_sciences, color='blue', label='Physical Sciences')
		plt.legend(loc='lower right')

		# Compute the maximum enrollment of women in Computer Science: cs_max
		cs_max = computer_science.max()

		# Calculate the year in which there was maximum enrollment of women in Computer Science: yr_max
		yr_max = year[computer_science.argmax()]

		# Add a black arrow annotation
		plt.annotate('Maximum', xy=(yr_max, cs_max), xytext=(yr_max+5, cs_max+5),arrowprops=dict(facecolor='black'))

		# Add axis labels and title
		plt.xlabel('Year')
		plt.ylabel('Enrollment (%)')
		plt.title('Undergraduate enrollment of women')
		plt.show()

legend
		plt.legend(loc='upper right')
		plt.title('Iris data')
		plt.xlabel('sepal length (cm)')
		plt.ylabel('sepal width (cm)')
		plt.show()
		
	# Specify the label 'Computer Science'
	plt.plot(year, computer_science, color='red', label='Computer Science') 

	# Specify the label 'Physical Sciences' 
	plt.plot(year, physical_sciences, color='blue', label='Physical Sciences')

	# Add a legend at the lower center
	plt.legend(loc='lower center')

	# Add axis labels and title
	plt.xlabel('Year')
	plt.ylabel('Enrollment (%)')
	plt.title('Undergraduate enrollment of women')
	plt.show()	

style
	# Set the style to 'ggplot'
	plt.style.use('ggplot')
		